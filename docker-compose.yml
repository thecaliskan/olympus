version: '3.3'

services:
    traefik:
        container_name: traefik
        image: traefik:latest
        restart: always
        ports:
            - "80:80"
            - "443:443"
            - "1025:1025"
            - "3306:3306"
            - "5432:5432"
            - "6379:6379"
            - "27017:27017"
        dns:
            - 8.8.8.8
            - 8.8.4.4
            - 9.9.9.9
            - 208.67.222.222
            - 208.67.220.220
            - 1.1.1.1
        command:
            - "--api.dashboard=true"
            - "--providers.docker=true"
            - "--providers.docker.watch=true"
            - "--providers.docker.network=olympus_olympus"
            - "--providers.docker.exposedbydefault=false"
            - "--entrypoints.web.address=:80"
            - "--entryPoints.web.http.redirections.entryPoint.to=websecure"
            - "--entryPoints.web.http.redirections.entryPoint.scheme=https"
            - "--entrypoints.websecure.address=:443"
            - "--entrypoints.mailhog.address=:1025"
            - "--entrypoints.mysql.address=:3306"
            - "--entrypoints.postgresql.address=:5432"
            - "--entrypoints.redis.address=:6379"
            - "--entrypoints.mongo.address=:27017"
            - "--providers.file.directory=/etc/traefik/dynamic"
            - "--providers.file.watch=true"
            - "--certificatesresolvers.cloudflare.acme.email=${CLOUDFLARE_EMAIL}"
            - "--certificatesresolvers.cloudflare.acme.dnschallenge.provider=cloudflare"
            - "--certificatesresolvers.cloudflare.acme.storage=/etc/traefik/acme/cloudflare.json"
            - "--serversTransport.insecureSkipVerify=true"
        networks:
            - olympus
        environment:
            - CLOUDFLARE_EMAIL=${CLOUDFLARE_EMAIL}
            - CLOUDFLARE_API_KEY=${CLOUDFLARE_API_KEY}
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - certs:/etc/certs
            - acme:/etc/traefik/acme
            - ./dynamic:/etc/traefik/dynamic
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)"
            - "traefik.http.routers.traefik.entrypoints=websecure"
            - "traefik.http.routers.traefik.tls=true"
            - "traefik.http.routers.traefik.tls.certresolver=cloudflare"
            - "traefik.http.routers.traefik.tls.domains[0].main=traefik.${DOMAIN}"
            - "traefik.http.routers.traefik.service=api@internal"
        extra_hosts:
            - "host.docker.internal:host-gateway"
        env_file:
            - ./.env


    whoami:
        container_name: whoami
        image: traefik/whoami:latest
        restart: always
        networks:
            - olympus
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.whoami.rule=Host(`whoami.${DOMAIN}`)"
            - "traefik.http.routers.whoami.entrypoints=websecure"
            - "traefik.http.services.whoami.loadBalancer.passHostHeader=true"
            - "traefik.http.routers.whoami.tls=true"
            - "traefik.http.routers.whoami.tls.certresolver=cloudflare"
            - "traefik.http.routers.whoami.tls.domains[0].main=whoami.${DOMAIN}"

    postgresql:
        container_name: postgresql
        image: postgres:alpine
        restart: always
        networks:
            - olympus
        volumes:
            - postgresql:/var/lib/postgresql/data
        environment:
            - POSTGRES_USER=${POSTGRES_USER}
            - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        labels:
            - "traefik.enable=true"
            - "traefik.tcp.routers.postgresql.rule=HostSNI(`*`)"
            - "traefik.tcp.services.postgresql.loadbalancer.server.port=5432"
            - "traefik.tcp.routers.postgresql.entrypoints=postgresql"

    pgadmin:
        image: dpage/pgadmin4:latest
        container_name: pgadmin
        restart: always
        networks:
            - olympus
        volumes:
            - pgadmin:/var/lib/pgadmin
        environment:
            - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
            - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
            - PGADMIN_LISTEN_PORT=80
        links:
            - "postgresql:postgresql"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.pgadmin.rule=Host(`pgadmin.${DOMAIN}`)"
            - "traefik.http.routers.pgadmin.entrypoints=websecure"
            - "traefik.http.routers.pgadmin.tls=true"
            - "traefik.http.routers.pgadmin.tls.certresolver=cloudflare"
            - "traefik.http.routers.pgadmin.tls.domains[0].main=pgadmin.${DOMAIN}"


    mysql:
        container_name: mysql
        image: mysql:latest
        command: --default-authentication-plugin=mysql_native_password --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
        restart: always
        networks:
            - olympus
        volumes:
            - mysql:/var/lib/mysql
        environment:
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_HOST=${MYSQL_ROOT_HOST}
        labels:
            - "traefik.enable=true"
            - "traefik.tcp.routers.mysql.rule=HostSNI(`*`)"
            - "traefik.tcp.services.mysql.loadbalancer.server.port=3306"
            - "traefik.tcp.routers.mysql.entrypoints=mysql"


    phpmyadmin:
        image: phpmyadmin:latest
        container_name: phpmyadmin
        restart: always
        networks:
            - olympus
        environment:
            - PMA_HOST=mysql
            - PMA_USER=${PMA_USER}
            - PMA_PASSWORD=${PMA_PASSWORD}
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.phpmyadmin.rule=Host(`phpmyadmin.${DOMAIN}`)"
            - "traefik.http.routers.phpmyadmin.entrypoints=websecure"
            - "traefik.http.routers.phpmyadmin.tls=true"
            - "traefik.http.routers.phpmyadmin.tls.certresolver=cloudflare"
            - "traefik.http.routers.phpmyadmin.tls.domains[0].main=phpmyadmin.${DOMAIN}"

    redis:
        container_name: redis
        image: redis:alpine
        restart: always
        networks:
            - olympus
        labels:
            - "traefik.enable=true"
            - "traefik.tcp.routers.redis.rule=HostSNI(`*`)"
            - "traefik.tcp.services.redis.loadbalancer.server.port=6379"
            - "traefik.tcp.routers.redis.entrypoints=redis"

    mailhog:
        image: mailhog/mailhog:latest
        container_name: mailhog
        restart: always
        networks:
            - olympus
        environment:
            - MH_HOSTNAME=mailhog.${DOMAIN}
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.mailhog.rule=Host(`mailhog.${DOMAIN}`)"
            - "traefik.http.services.mailhog.loadbalancer.server.port=8025"
            - "traefik.http.routers.mailhog.entrypoints=websecure"
            - "traefik.http.routers.mailhog.tls=true"
            - "traefik.http.routers.mailhog.tls.certresolver=cloudflare"
            - "traefik.http.routers.mailhog.tls.domains[0].main=mailhog.${DOMAIN}"
            - "traefik.tcp.routers.mailhog-smtp.rule=HostSNI(`*`)"
            - "traefik.tcp.routers.mailhog-smtp.entrypoints=mailhog"
            - "traefik.tcp.routers.mailhog-smtp.service=mailhog-smtp"
            - "traefik.tcp.services.mailhog-smtp.loadbalancer.server.port=1025"

    mssql:
        container_name: mssql
        image: mcr.microsoft.com/mssql/server:2019-latest
        restart: always
        ports:
            - "1433:1433"
        networks:
            - olympus
        volumes:
            - mssql:/var/opt/mssql
        environment:
            - ACCEPT_EULA=Y
            - SA_PASSWORD=${MSSQL_PASSWORD}

    mongo:
        image: mongo:latest
        restart: always
        networks:
            - olympus
        volumes:
            - mongo:/data/db
        environment:
            - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
            - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
        labels:
            - "traefik.enable=true"
            - "traefik.tcp.routers.mongo.rule=HostSNI(`*`)"
            - "traefik.tcp.services.mongo.loadbalancer.server.port=27017"
            - "traefik.tcp.routers.mongo.entrypoints=mongo"

    mongo-express:
        image: mongo-express:latest
        restart: always
        networks:
            - olympus
        environment:
            - ME_CONFIG_MONGODB_ADMINUSERNAME= ${MONGO_EXPRESS_USER}
            - ME_CONFIG_MONGODB_ADMINPASSWORD= ${MONGO_EXPRESS_PASSWORD}
            - ME_CONFIG_MONGODB_URL= mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongo:27017/
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.mongoexpress.rule=Host(`mongoexpress.${DOMAIN}`)"
            - "traefik.http.routers.mongoexpress.entrypoints=websecure"
            - "traefik.http.routers.mongoexpress.tls=true"
            - "traefik.http.routers.mongoexpress.tls.certresolver=cloudflare"
            - "traefik.http.routers.mongoexpress.tls.domains[0].main=mongoexpress.${DOMAIN}"
            - "traefik.http.services.mongoexpress.loadbalancer.server.port=8081"


    minio:
        container_name: minio
        image: minio/minio:latest
        restart: always
        networks:
            - olympus
        volumes:
            - minio:/data
        command: server /data --console-address ":9001"
        environment:
            - MINIO_ROOT_USER= ${MINIO_USER}
            - MINIO_ROOT_PASSWORD= ${MINIO_PASSWORD}
            - MINIO_SERVER_URL= https://minio.${DOMAIN}
            - MINIO_BROWSER_REDIRECT_URL= https://minio-console.${DOMAIN}
        links:
            - "traefik:minio.${DOMAIN}"
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.minio.rule=Host(`minio.${DOMAIN}`)"
            - "traefik.http.services.minio.loadbalancer.server.port=9000"
            - "traefik.http.routers.minio.entrypoints=websecure"
            - "traefik.http.routers.minio.service=minio"
            - "traefik.http.routers.minio.tls=true"
            - "traefik.http.routers.minio.tls.certresolver=cloudflare"
            - "traefik.http.routers.minio.tls.domains[0].main=minio.${DOMAIN}"
            - "traefik.http.routers.minio-console.rule=Host(`minio-console.${DOMAIN}`)"
            - "traefik.http.services.minio-console.loadbalancer.server.port=9001"
            - "traefik.http.routers.minio-console.entrypoints=websecure"
            - "traefik.http.routers.minio-console.service=minio-console"
            - "traefik.http.routers.minio-console.tls=true"
            - "traefik.http.routers.minio-console.tls.certresolver=cloudflare"
            - "traefik.http.routers.minio-console.tls.domains[0].main=minio-console.${DOMAIN}"
        healthcheck:
            test: [ "CMD", "curl", "-f", "http://localhost:9000/minio/health/live" ]
            interval: 30s
            timeout: 20s
            retries: 3


networks:
    olympus:
        driver: bridge

volumes:
    certs:
        driver: local
    acme:
        driver: local
    postgresql:
        driver: local
    pgadmin:
        driver: local
    mysql:
        driver: local
    mssql:
        driver: local
    mongo:
        driver: local
    minio:
        driver: local
